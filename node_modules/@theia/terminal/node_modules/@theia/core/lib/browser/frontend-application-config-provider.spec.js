"use strict";
/********************************************************************************
 * Copyright (C) 2021 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var jsdom_1 = require("../browser/test/jsdom");
var disableJSDOM = jsdom_1.enableJSDOM();
var lib_1 = require("@theia/application-package/lib/");
var chai_1 = require("chai");
var frontend_application_config_provider_1 = require("./frontend-application-config-provider");
disableJSDOM();
var DEFAULT = lib_1.FrontendApplicationConfig.DEFAULT;
describe('FrontendApplicationConfigProvider', function () {
    before(function () { return disableJSDOM = jsdom_1.enableJSDOM(); });
    after(function () { return disableJSDOM(); });
    it('should use defaults when calling `set`', function () {
        frontend_application_config_provider_1.FrontendApplicationConfigProvider.set({
            applicationName: DEFAULT.applicationName + ' Something Else',
            electron: {
                disallowReloadKeybinding: !DEFAULT.electron.disallowReloadKeybinding
            }
        });
        var config = frontend_application_config_provider_1.FrontendApplicationConfigProvider.get();
        // custom values
        chai_1.expect(config.applicationName).not.equal(DEFAULT.applicationName);
        chai_1.expect(config.electron.disallowReloadKeybinding).not.equal(DEFAULT.electron.disallowReloadKeybinding);
        // defaults
        chai_1.expect(config.defaultIconTheme).equal(DEFAULT.defaultIconTheme);
        chai_1.expect(config.defaultTheme).equal(DEFAULT.defaultTheme);
        chai_1.expect(config.electron.windowOptions).deep.equal(DEFAULT.electron.windowOptions);
    });
});
//# sourceMappingURL=frontend-application-config-provider.spec.js.map