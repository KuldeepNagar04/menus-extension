"use strict";
/********************************************************************************
 * Copyright (C) 2021 Ericsson and others.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License v. 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0.
 *
 * This Source Code may also be made available under the following Secondary
 * Licenses when the conditions for such availability set forth in the Eclipse
 * Public License v. 2.0 are satisfied: GNU General Public License, version 2
 * with the GNU Classpath Exception which is available at
 * https://www.gnu.org/software/classpath/license.html.
 *
 * SPDX-License-Identifier: EPL-2.0 OR GPL-2.0 WITH Classpath-exception-2.0
 ********************************************************************************/
Object.defineProperty(exports, "__esModule", { value: true });
var chai_1 = require("chai");
var inversify_1 = require("inversify");
var process_utils_1 = require("./process-utils");
/** PPID, PID */
var mockPsOutput = "     5     6\n    40     7\n     1     2\n     1     3\n     2    40\n     2     5\n     0     1\n";
describe('ProcessUtils', function () {
    var coreProcessManager;
    beforeEach(function () {
        var container = new inversify_1.Container();
        container.bind(process_utils_1.ProcessUtils).toSelf().inSingletonScope();
        coreProcessManager = container.get(process_utils_1.ProcessUtils);
    });
    it('ProcessUtils#unixGetChildrenRecursive', function () {
        // eslint-disable-next-line @typescript-eslint/no-explicit-any
        coreProcessManager['spawnSync'] = function () { return ({ stdout: mockPsOutput }); };
        var pids = coreProcessManager['unixGetChildrenRecursive'](2);
        chai_1.expect(Array.from(pids)).members([40, 5, 6, 7]);
    });
});
//# sourceMappingURL=process-utils.spec.js.map